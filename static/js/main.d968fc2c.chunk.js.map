{"version":3,"sources":["utils/utils.js","utils/api.js","utils/localstorage.js","utils/constants.js","components/TheTime.js","components/NextTimes.js","components/FromTo.js","App.js","serviceWorker.js","index.js"],"names":["getExpireTime","secondsToExpires","date","Date","setSeconds","getSeconds","getTime","now","toISOString","substr","time","toTimeString","token","accessToken","expires","getData","fromStopId","a","async","isTokenValid","setToken","fetchData","response","status","json","data","tripUrl","fetch","method","headers","Authorization","fetchAccessToken","body","expires_in","access_token","saveFromStopToLocalStorage","fromStop","localStorage","setItem","JSON","stringify","saveDestinationStopToLocalStorage","destinationStop","getFromStopFromLocalStorage","parse","getItem","getDestinationStopFromLocalStorage","nordstan","name","id","partilleCentrum","TheTime","props","timeTable","realTime","rtTime","className","NextTimes","icon","faBus","FromTo","handleSwap","from","destination","onClick","faExchangeAlt","App","useState","setTimeTable","isError","error","setError","fromStopLocalStorage","setFromStop","destinationStopLocalStorage","setDestionationStop","getTimeTable","useCallback","handleData","useEffect","DepartureBoard","title","text","errorText","Departure","newDestinationStop","newFromStop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2PAAaA,G,MAAgB,SAAAC,GAC3B,IAAIC,EAAO,IAAIC,KAEf,OADAD,EAAKE,WAAWF,EAAKG,aAAeJ,GAC7BC,IAGII,EAAU,WACrB,IAAMC,EAAM,IAAIJ,KAGhB,MAAO,CAAED,KAFIK,EAAIC,cAAcC,OAAO,EAAG,IAE1BC,KADFH,EAAII,eAAeF,OAAO,EAAG,KCPxCG,EAAQ,CAAEC,YAAa,GAAIC,QAAS,MAI3BC,EAAU,SAAOC,GAAP,iBAAAC,EAAAC,OAAA,mDAEhBC,IAFgB,kCAAAF,EAAA,MAGbG,KAHa,yBAAAH,EAAA,MAKAI,EAAUL,IALV,UAMG,OADpBM,EALiB,QAMRC,OANQ,mCAAAN,EAAA,MAObG,KAPa,0BAAAH,EAAA,MAQFI,EAAUL,IARR,QAQnBM,EARmB,kBAUG,MAApBA,EAASC,OAVQ,oCAAAN,EAAA,MAWNK,EAASE,QAXH,eAWnBC,EAXmB,yBAYZA,GAZY,iCAcdA,GAdc,uCAiBjBJ,EAAY,SAAOL,GAAP,uBAAAC,EAAAC,OAAA,yDACOZ,IAAfJ,EADQ,EACRA,KAAMQ,EADE,EACFA,KACRgB,EAFU,sEAE+DV,EAF/D,iBAEkFd,EAFlF,iBAE+FQ,EAF/F,2BAAAO,EAAA,MAGOU,MAAMD,EAAS,CACpCE,OAAQ,MACRC,QAAS,CACPC,cAAc,UAAD,OAAYlB,EAAMC,iBANnB,cAGVS,EAHU,yBASTA,GATS,sCAYZH,EAAe,WACnB,QAAKP,EAAMC,eACPD,EAAME,SAAWF,EAAME,QAAU,IAAIX,OAIrC4B,EAAmB,4BAAAd,EAAAC,OAAA,kEAAAD,EAAA,MACAU,MAAM,sCAAuC,CAClEE,QAAS,CACPC,cAAc,SAAD,OAxCjB,gFAyCI,eAAgB,qCAElBF,OAAQ,OACRI,KAAM,mCAPe,cACjBV,EADiB,kBAAAL,EAAA,MASJK,EAASE,QATL,cASjBC,EATiB,yBAUhBA,GAVgB,sCAanBL,EAAW,8BAAAH,EAAAC,OAAA,kEAAAD,EAAA,MACIc,KADJ,OACTN,EADS,OAETX,EAAUd,EAAcyB,EAAKQ,YAC7BpB,EAAcY,EAAKS,aACzBtB,EAAQ,CAAEC,cAAaC,WAJR,sCCtDJqB,EAA6B,SAAAC,GACxCC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,KAGrCK,EAAoC,SAAAC,GAC/CL,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUE,KAG5CC,EAA8B,WACzC,OAAOJ,KAAKK,MAAMP,aAAaQ,QAAQ,cAG5BC,EAAqC,WAChD,OAAOP,KAAKK,MAAMP,aAAaQ,QAAQ,qBCF5BE,EAAW,CACtBC,KAAM,uBACNC,GAZiB,oBAyBNC,EAAkB,CAC7BF,KAAM,mBACNC,GAxBwB,oBCeXE,EAjBC,SAAAC,GAAU,IAChBC,EAAcD,EAAdC,UACF3C,EAAO2C,EAAU,GAAG3C,KACpB4C,EAAWD,EAAU,GAAGE,OAC9B,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAe9C,IAE/B,yBAAK8C,UAAU,gBACZ9C,IAAS4C,EAAW,wBAAIE,UAAU,YAAd,IAA2BF,EAA3B,KAA6C,M,cCW3DG,EApBG,SAAAL,GAAU,IAClBC,EAAcD,EAAdC,UACR,OACE,6BACE,2BACE,kBAAC,IAAD,CAAiBG,UAAU,UAAUE,KAAMC,MAC1CN,EAAU,GAAG3C,MAEhB,2BACE,kBAAC,IAAD,CAAiB8C,UAAU,UAAUE,KAAMC,MAC1CN,EAAU,GAAG3C,MAEhB,2BACE,kBAAC,IAAD,CAAiB8C,UAAU,UAAUE,KAAMC,MAC1CN,EAAU,GAAG3C,QCKPkD,EAnBA,SAAAR,GAAU,IACfS,EAAkCT,EAAlCS,WAAYC,EAAsBV,EAAtBU,KAAMC,EAAgBX,EAAhBW,YAC1B,OACE,yBAAKP,UAAU,iBACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,OAAOQ,QAASH,GAC3BC,EAAKd,MACF,IACN,kBAAC,IAAD,CACEQ,UAAU,iBACVQ,QAASH,EACTH,KAAMO,MAER,wBAAIT,UAAU,MAAMO,EAAYf,SC4EzBkB,MA/Ef,WAAgB,IAAD,EACqBC,qBADrB,mBACNd,EADM,KACKe,EADL,OAEaD,mBAAS,CAAEE,SAAS,IAFjC,mBAENC,EAFM,KAECC,EAFD,KAGPC,EAAuB7B,IAHhB,EAImBwB,mBAC9BK,GAA8CtB,GALnC,mBAINd,EAJM,KAIIqC,EAJJ,KAOPC,EAA8B5B,IAPvB,EAQkCqB,mBAC7CO,GAA4D3B,GATjD,mBAQNL,EARM,KAQWiC,EARX,KAYPC,EAAeC,uBAAY,0BAAA5D,EAAAC,OAAA,kEAAAD,EAAA,MACZF,EAAQqB,EAASa,KADL,OACzBxB,EADyB,OAE/BqD,EAAWrD,GAFoB,uCAG9B,CAACW,IAEJ2C,qBAAU,WACRH,MACC,CAACA,IAEJ,IAAME,EAAa,SAAArD,GACjB,GAAIA,EAAM,CACR,GAAIA,EAAKuD,gBAAkBvD,EAAKuD,eAAeV,MAM7C,YALAC,EAAS,CACPF,SAAS,EACTY,MAAOxD,EAAKuD,eAAeV,MAC3BY,KAAMzD,EAAKuD,eAAeG,YAI9B,GAAI1D,EAAKuD,eAAeI,UAGtB,OAFAhB,EAAa3C,EAAKuD,eAAeI,gBACjCb,EAAS,CAAEF,SAAS,IAIxBE,EAAS,CAAEF,SAAS,EAAMY,MAAO,QAASC,KAAM,uCAgBlD,OACE,yBAAK1B,UAAU,OACZc,EAAMD,SACL,kBAAC,WAAD,KACE,4BAAKC,EAAMW,OACX,2BAAIX,EAAMY,OAGb7B,GACC,kBAAC,WAAD,KACE,yBAAKG,UAAU,aACb,kBAAC,EAAD,CAASH,UAAWA,IACpB,kBAAC,EAAD,CAAWA,UAAWA,KAExB,kBAAC,EAAD,CACEQ,WA5BS,WACjB,IAAMwB,EAAqBjD,EACrBkD,EAAc5C,EACpB+B,EAAYa,GACZX,EAAoBU,GACpBlD,EAA2BmD,GAC3B7C,EAAkC4C,IAuB1BvB,KAAM1B,EACN2B,YAAarB,MApBb4B,EAAMD,UAAYhB,GAwBR,gDC5EFkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d968fc2c.chunk.js","sourcesContent":["export const getExpireTime = secondsToExpires => {\n  let date = new Date()\n  date.setSeconds(date.getSeconds() + secondsToExpires)\n  return date\n}\n\nexport const getTime = () => {\n  const now = new Date()\n  const date = now.toISOString().substr(0, 10)\n  const time = now.toTimeString().substr(0, 5)\n  return { date, time }\n}\n","import { getTime, getExpireTime } from \"./utils\"\n\nvar token = { accessToken: \"\", expires: null }\nconst id =\n  \"T0hDc2txdEp6cDhMYlVmRjhsaWVfeERHdDBBYTp6ME5wWWY3dlYxbUFhTEVFbkdyRFprTGEwODBh\"\n\nexport const getData = async (fromStopId) => {\n  let data\n  if (!isTokenValid()) {\n    await setToken()\n  }\n  let response = await fetchData(fromStopId)\n  if (response.status === 401) {\n    await setToken()\n    response = await fetchData(fromStopId)\n  }\n  if (response.status === 200) {\n    data = await response.json()\n    return data\n  }\n  return data\n}\n\nconst fetchData = async (fromStopId) => {\n  const { date, time } = getTime()\n  const tripUrl = `https://api.vasttrafik.se/bin/rest.exe/v2/departureBoard?id=${fromStopId}&date=${date}&time=${time}&format=json`\n  const response = await fetch(tripUrl, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token.accessToken}`\n    }\n  })\n  return response\n}\n\nconst isTokenValid = () => {\n  if (!token.accessToken) return false\n  if (token.expires && token.expires < new Date()) return false\n  return true\n}\n\nconst fetchAccessToken = async () => {\n  const response = await fetch(\"https://api.vasttrafik.se:443/token\", {\n    headers: {\n      Authorization: `Basic ${id}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    method: \"POST\",\n    body: \"grant_type=client_credentials\"\n  })\n  const data = await response.json()\n  return data\n}\n\nconst setToken = async () => {\n  const data = await fetchAccessToken()\n  const expires = getExpireTime(data.expires_in)\n  const accessToken = data.access_token\n  token = { accessToken, expires }\n}\n","export const saveFromStopToLocalStorage = fromStop => {\n  localStorage.setItem(\"fromStop\", JSON.stringify(fromStop))\n}\n\nexport const saveDestinationStopToLocalStorage = destinationStop => {\n  localStorage.setItem(\"destinationStop\", JSON.stringify(destinationStop))\n}\n\nexport const getFromStopFromLocalStorage = () => {\n  return JSON.parse(localStorage.getItem(\"fromStop\"))\n}\n\nexport const getDestinationStopFromLocalStorage = () => {\n  return JSON.parse(localStorage.getItem(\"destinationStop\"))\n}\n","const partillePortId = \"9021014013213000\"\nconst nordstanId = \"9021014004945000\"\nconst GothenburgCentral = \"9021014008000000\"\nconst partilleStationId = \"9021014013715000\"\nconst partilleCentrumId = \"9021014013215000\"\n\nexport const partillePort = {\n  name: \"Partille Port\",\n  id: partillePortId\n}\n\nexport const nordstan = {\n  name: \"GÃ¶teborg Nordstan\",\n  id: nordstanId\n}\n\nexport const gothenburgCentral = {\n  name: \"Centralstationen\",\n  id: GothenburgCentral\n}\n\nexport const partilleStation = {\n  name: \"Partille Centrum\",\n  id: partilleStationId\n}\n\nexport const partilleCentrum = {\n  name: \"Partille Centrum\",\n  id: partilleCentrumId\n}\n","import React from \"react\"\n\nconst TheTime = props => {\n  const { timeTable } = props\n  const time = timeTable[0].time\n  const realTime = timeTable[0].rtTime\n  return (\n    <div className=\"TheTime\">\n      <div className=\"TheTimeBlock\" />\n      <div className=\"TheTimeBlock\">\n        <h1 className=\"nextBusTime\">{time}</h1>\n      </div>\n      <div className=\"TheTimeBlock\">\n        {time !== realTime ? <h2 className=\"realTime\">({realTime})</h2> : \"\"}\n      </div>\n    </div>\n  )\n}\n\nexport default TheTime\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faBus } from \"@fortawesome/free-solid-svg-icons\"\n\nconst NextTimes = props => {\n  const { timeTable } = props\n  return (\n    <div>\n      <p>\n        <FontAwesomeIcon className=\"busIcon\" icon={faBus} />\n        {timeTable[1].time}\n      </p>\n      <p>\n        <FontAwesomeIcon className=\"busIcon\" icon={faBus} />\n        {timeTable[2].time}\n      </p>\n      <p>\n        <FontAwesomeIcon className=\"busIcon\" icon={faBus} />\n        {timeTable[3].time}\n      </p>\n    </div>\n  )\n}\n\nexport default NextTimes\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\"\n\nconst FromTo = props => {\n  const { handleSwap, from, destination } = props\n  return (\n    <div className=\"fromToWrapper\">\n      <div className=\"fromTo\">\n        <h3 className=\"from\" onClick={handleSwap}>\n          {from.name}\n        </h3>{\" \"}\n        <FontAwesomeIcon\n          className=\"exchangeArrows\"\n          onClick={handleSwap}\n          icon={faExchangeAlt}\n        />\n        <h3 className=\"to\">{destination.name}</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default FromTo\n","import React, { useEffect, useState, useCallback, Fragment } from \"react\"\nimport \"./App.css\"\nimport { getData } from \"./utils/api\"\nimport {\n  getFromStopFromLocalStorage,\n  getDestinationStopFromLocalStorage,\n  saveFromStopToLocalStorage,\n  saveDestinationStopToLocalStorage\n} from \"./utils/localstorage\"\nimport { partilleCentrum, nordstan } from \"./utils/constants\"\nimport TheTime from \"./components/TheTime\"\nimport NextTimes from \"./components/NextTimes\"\nimport FromTo from \"./components/FromTo\"\n\nfunction App() {\n  const [timeTable, setTimeTable] = useState()\n  const [error, setError] = useState({ isError: false })\n  const fromStopLocalStorage = getFromStopFromLocalStorage()\n  const [fromStop, setFromStop] = useState(\n    fromStopLocalStorage ? fromStopLocalStorage : partilleCentrum\n  )\n  const destinationStopLocalStorage = getDestinationStopFromLocalStorage()\n  const [destinationStop, setDestionationStop] = useState(\n    destinationStopLocalStorage ? destinationStopLocalStorage : nordstan\n  )\n\n  const getTimeTable = useCallback(async () => {\n    const data = await getData(fromStop.id)\n    handleData(data)\n  }, [fromStop])\n\n  useEffect(() => {\n    getTimeTable()\n  }, [getTimeTable])\n\n  const handleData = data => {\n    if (data) {\n      if (data.DepartureBoard && data.DepartureBoard.error) {\n        setError({\n          isError: true,\n          title: data.DepartureBoard.error,\n          text: data.DepartureBoard.errorText\n        })\n        return\n      }\n      if (data.DepartureBoard.Departure) {\n        setTimeTable(data.DepartureBoard.Departure)\n        setError({ isError: false })\n        return\n      }\n    }\n    setError({ isError: true, title: \"Oops!\", text: \"Something went wrong ð¤\" })\n  }\n\n  const handleSwap = () => {\n    const newDestinationStop = fromStop\n    const newFromStop = destinationStop\n    setFromStop(newFromStop)\n    setDestionationStop(newDestinationStop)\n    saveFromStopToLocalStorage(newFromStop)\n    saveDestinationStopToLocalStorage(newDestinationStop)\n  }\n\n  const isLoading = () => {\n    return !error.isError && !timeTable\n  }\n\n  return (\n    <div className=\"App\">\n      {error.isError && (\n        <Fragment>\n          <h2>{error.title}</h2>\n          <p>{error.text}</p>\n        </Fragment>\n      )}\n      {timeTable && (\n        <Fragment>\n          <div className=\"TimeTable\">\n            <TheTime timeTable={timeTable} />\n            <NextTimes timeTable={timeTable} />\n          </div>\n          <FromTo\n            handleSwap={handleSwap}\n            from={fromStop}\n            destination={destinationStop}\n          />\n        </Fragment>\n      )}\n      {isLoading() && <p>fetching data..</p>}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}